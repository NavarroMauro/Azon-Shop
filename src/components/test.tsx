import { signIn, signOut, useSession } from "next-auth/react";
import Head from "next/head";
import Image from "next/image";
// import { useQueryClient } from "@tanstack/react-query";
import { trpc } from "../utils/trpc";
// import { type Product } from "@prisma/client";
import { useCartActions } from "../hooks/useCartActions";

export const Test = () => {
  const { addToCartHandler, deleteOne, deleteCart, createCheckOutSession } =
    useCartActions();
  const { data: sessionData } = useSession();
  const cartItems = trpc.cart.getCartItems.useQuery();
  const trpcTest = trpc.product.getAll.useQuery(20);

  let totalQuantity = 0;
  cartItems?.data?.forEach((el) => {
    totalQuantity += el.quantity;
  });
  console.log(totalQuantity);

  // const trpcCategory = trpc.category.getOneCategory.useQuery("Kindle");
  // const trpcCategories = trpc.category.getAllCategories.useQuery();
  // const trpcTest2 = trpc.product.getOne.useQuery("clb3p3i59000055f8b7gejbm7");
  // if (cartItems?.data[0]) {
  //   const totalPrice =
  //     cartItems?.data[0]?.quantity * Number(cartItems?.data[0]?.product.price);
  //   console.log(totalPrice);
  // }
  return (
    <>
      <Head>
        <title>Create T3 App</title>
        <meta name="description" content="Generated by create-t3-app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <main className="flex min-h-screen flex-col items-center justify-center overflow-hidden bg-gradient-to-b from-[#2e026d] to-[#15162c]">
        <div className="fixed top-0 left-4 mt-3 text-xl text-white">
          Cart
          <span className="absolute -top-2 -right-6 inline-flex h-6 w-6 items-center justify-center rounded-full border-2 border-white bg-red-500 text-xs font-bold text-white dark:border-gray-900">
            {totalQuantity}
          </span>
        </div>
        <div className="mt-5 flex gap-4">
          <button
            className="rounded-full bg-white/10 px-10 py-3 font-semibold text-white no-underline transition hover:bg-white/20"
            onClick={sessionData ? () => signOut() : () => signIn()}
          >
            {sessionData ? "Sign out" : "Sign in"}
          </button>
          <button
            className="rounded-full bg-white/10 px-10 py-3 font-semibold text-white no-underline transition hover:bg-white/20"
            onClick={deleteCart}
          >
            Delete Cart
          </button>
        </div>
        <div className="flex w-screen items-end gap-4 overflow-x-scroll px-12 py-12">
          {trpcTest.data?.map((el) => {
            return (
              <div
                className="flex flex-col items-center gap-4 text-xl text-white"
                key={el.id}
              >
                <span>{el.id}</span>
                <span>{el.title}</span>
                <div className="relative h-52 w-52 object-cover">
                  <Image alt={el.title} src={el.image} fill />
                </div>

                <button
                  className="rounded-full bg-white/10 px-10 py-3 font-semibold text-white no-underline transition hover:bg-white/20"
                  onClick={() => addToCartHandler(el, 5)}
                >
                  Add to Cart
                </button>
              </div>
            );
          })}
        </div>
        <div className="flex w-screen items-end gap-4 overflow-x-scroll px-12 py-12">
          {cartItems?.data?.map((el) => {
            return (
              <div
                key={el.id}
                className="flex flex-col items-center gap-4 text-xl text-white"
              >
                <span>{el.product.title}</span>
                <span>{el.quantity}</span>
                <div className="relative h-52 w-52">
                  <Image alt={el.product.title} src={el.product.image} fill />
                </div>

                <button
                  className="rounded-full bg-red-700 px-10 py-3 font-semibold text-white no-underline transition hover:bg-red-800"
                  onClick={() => deleteOne(el)}
                >
                  Remove One
                </button>
              </div>
            );
          })}
        </div>
        <button
          className="rounded-full bg-red-700 px-10 py-3 font-semibold text-white no-underline transition hover:bg-red-800"
          onClick={() => createCheckOutSession(cartItems.data)}
        >
          Checkout
        </button>
      </main>
    </>
  );
};
